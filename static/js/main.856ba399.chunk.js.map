{"version":3,"sources":["common/input.module.css","Messenger.tsx","TaskList.tsx","Input.tsx","common/MyInput.tsx","common/MyButton.tsx","common/MyCheckbox.tsx","Menu.tsx","common/EditableSpan.tsx","common/Select.tsx","common/Radio.tsx","homeWorkReducer.ts","ReducersTask.tsx","DateTask.tsx","common/Preloader.tsx","common/Range.tsx","pageModeReducer.ts","JuniorPage.tsx","App.tsx","serviceWorker.ts","reduxTaskReducer.ts","state/store.ts","index.tsx","Messenger.module.css"],"names":["module","exports","MessageList","useState","title","date","photo","name","message","setMessage","newMessageTitle","setNewMessageTitle","today","Date","String","getDate","padStart","getMonth","getFullYear","addNewMassage","newMessage","newMessages","className","style","message_list","map","m","MassageItem","new_message","onChange","e","currentTarget","value","onKeyPress","charCode","type","placeholder","send_button","onClick","message_container","message_item","message_date","user_photo","src","TaskList","id","n","p","tasks","setTasks","deleteTask","filter","t","setFilteredTasks","filteredTasks","TaskItem","task","key","Input","initState","v1","names","setNames","trim","length","alert","MyInput","onEnterPress","error","onBlur","group","autoFocus","color","bar","MyButton","text","disabled","MyCheckbox","checked","event","Menu","position","left","exact","to","EditableSpan","editMode","setEditMode","onDoubleClick","Select","options","size","onSelectChange","width","height","fontSize","hidden","opt","Radio","radio","onRadioChange","newRadioValue","r","display","hwReducer","state","action","payload","sort","a","b","comparison","person","age","ReducersTask","useReducer","people","dispatchPeople","DateTask","moment","format","setDate","timerId","setTimerId","data-title","justifyContent","clearInterval","timer_id","setInterval","Preloader","Range","React","memo","maxValue","minValue","rangeValue","step","min","max","initialState","darkMode","changeSiteModeAC","JuniorPage","dispatch","useDispatch","App","setValue","setChecked","setSpanValue","onChangeCheckbox","selected","setSelected","onChangeSelect","selectedValue","radioState","radioValue","setRadioValue","loading","useSelector","juniorPage","setLoading","setTimeout","setRangeValue","onRangeChange","useCallback","pageMode","path","render","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.856ba399.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"input_group__3QrRP\",\"bar\":\"input_bar__FZSmD\"};","import React, {useState} from \"react\";\r\nimport style from \"./Messenger.module.css\"\r\n\r\n\r\nexport function MessageList() {\r\n\r\n    let initState = [\r\n        {\r\n            title: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab aliquam architecto\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab aliquam architecto\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"consectetur cupiditate\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"Lorem ipsum dolor sit amet\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"Hello again\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        }\r\n    ]\r\n\r\n    type MessageType = { title: string, date: string, photo: string, name: string }\r\n    let [message, setMessage] = useState<Array<MessageType>>(initState)\r\n    let [newMessageTitle, setNewMessageTitle] = useState<string>(\"\")\r\n\r\n    let today = new Date();\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    let yyyy = today.getFullYear();\r\n    let date = dd + '.' + mm + '.' + yyyy;\r\n\r\n    const addNewMassage = () => {\r\n        let newMessage = {\r\n            title: newMessageTitle,\r\n            date: date,\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        }\r\n        const newMessages = [...message, newMessage]\r\n        setMessage(newMessages)\r\n        setNewMessageTitle(\"\")\r\n    }\r\n\r\n    const onEnterPress = (e: any) => {\r\n        if (e.charCode === 13) {\r\n            addNewMassage()\r\n        }\r\n    }\r\n\r\n    return <div className={style.message_list}>\r\n        {message.map((m) => <MassageItem message={m}/>)}\r\n        <div className={style.new_message}>\r\n            <input onChange={e => setNewMessageTitle(e.currentTarget.value)} onKeyPress={onEnterPress} type=\"text\"\r\n                   value={newMessageTitle}\r\n                   placeholder=\"Enter your message\"/>\r\n\r\n            <button className={style.send_button} onClick={addNewMassage}>SEND</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype MessageItemPropsType = {\r\n    message: { title: string, date: string, photo: string, name: string }\r\n}\r\n\r\nfunction MassageItem({message}: MessageItemPropsType) {\r\n    return (<div className={style.message_container}>\r\n        <div className={style.message_item}>\r\n            <div className={style.name}>{message.name}</div>\r\n            <div className={style.title}>{message.title}</div>\r\n            <div className={style.message_date}>{message.date}</div>\r\n        </div>\r\n        <img className={style.user_photo} src={message.photo}/>\r\n    </div>)\r\n}","import React, {useState} from \"react\";\r\nimport style from \"./Messenger.module.css\"\r\n\r\ntype TaskType = { id: number, n: string, p: string }\r\n\r\nexport function TaskList() {\r\n\r\n    let allTasks = [\r\n        {id: 1, n: \"работа\", p: \"hight\"},\r\n        {id: 2, n: \"аниме\", p: \"low\"},\r\n        {id: 3, n: \"игры\", p: \"middle\"},\r\n        {id: 4, n: \"реакт\", p: \"hight\"},\r\n        {id: 5, n: \"хтмл\", p: \"low\"},\r\n        {id: 6, n: \"css\", p: \"low\"},\r\n        {id: 7, n: \"js\", p: \"hight\"},\r\n    ]\r\n    let [tasks, setTasks] = useState<Array<TaskType>>(allTasks)\r\n    const deleteTask = (id: number) => {\r\n        setTasks([...tasks.filter(t => t.id != id)])\r\n        setFilteredTasks([...filteredTasks.filter(t => t.id != id)])\r\n    }\r\n    const hightPriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"hight\"))\r\n    }\r\n    const middlePriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"middle\"))\r\n    }\r\n    const lowPriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"low\"))\r\n    }\r\n    const allTask = () => {\r\n        setFilteredTasks(tasks)\r\n    }\r\n    let [filteredTasks, setFilteredTasks] = useState<Array<TaskType>>(tasks)\r\n\r\n    return <div>\r\n        {filteredTasks?.map((t) => <TaskItem deleteTask={deleteTask} task={t}/>)}\r\n        <button onClick={() => hightPriorityTask()}>hight</button>\r\n        <button onClick={() => middlePriorityTask()}>middle</button>\r\n        <button onClick={() => lowPriorityTask()}>low</button>\r\n        <button onClick={() => allTask()}>all</button>\r\n    </div>\r\n}\r\n\r\ntype TaskItemProps = {\r\n    task: TaskType\r\n    deleteTask: (id: number) => void\r\n}\r\n\r\nfunction TaskItem({task, deleteTask}: TaskItemProps) {\r\n\r\n    return <div key={task.id}>{task.n} - {task.p}\r\n        <button onClick={() => deleteTask(task.id)}>X</button>\r\n    </div>\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {v1} from 'uuid';\r\n\r\ntype namesType = { id: string, name: string }\r\n\r\nexport function Input() {\r\n    let initState: Array<namesType> = [\r\n        {id: v1(), name: \"Bohdan\"},\r\n        {id: v1(), name: \"Roman\"},\r\n        {id: v1(), name: \"Victor\"}]\r\n    let [names, setNames] = useState<Array<namesType>>(initState)\r\n    let [newMessageTitle, setNewMessageTitle] = useState<string>(\"\")\r\n    const addNewMassage = () => {\r\n        if (newMessageTitle.trim().length != 0) {\r\n            setNames([...names, {id: v1(), name: newMessageTitle}])\r\n            alert(`Hello ${newMessageTitle}!!!`)\r\n            setNewMessageTitle(\"\")\r\n        }\r\n    }\r\n    const onEnterPress = (e: any) => {\r\n        if (e.charCode === 13) {\r\n            addNewMassage()\r\n        }\r\n    }\r\n    return <div className=\"group\">\r\n        <input onChange={e => setNewMessageTitle(e.currentTarget.value)} onKeyPress={onEnterPress} type=\"text\"\r\n               value={newMessageTitle}\r\n               placeholder=\"Enter your name\"/>\r\n        <button onClick={addNewMassage}>SEND</button>\r\n        {names.map(n => <div key={n.id}>{n.name}</div>)}\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport style from \"./input.module.css\"\r\n\r\ntype MyInputType = {\r\n    onChange: (e:string) =>void\r\n    onEnterPress?:(e:string)=>void\r\n    error:boolean\r\n    value:string\r\n    placeholder:string\r\n    onBlur?: ()=>void\r\n}\r\n\r\nexport function MyInput({onChange,onEnterPress, value, error, placeholder, onBlur}: MyInputType) {\r\n    const enterEvent = (e: any) => {\r\n        if (e.charCode === 13&&onEnterPress) {\r\n            onEnterPress((e.currentTarget.value))\r\n        }\r\n    }\r\n    return <div className={style.group}>\r\n        <input autoFocus={true} onBlur={onBlur}  style={error?{color:\"red\"}:{}} value={value} onKeyPress={enterEvent} placeholder={placeholder} type=\"text\" onChange={(e => onChange(e.currentTarget.value))}/>\r\n        <span className={style.bar}></span>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./button.scss\"\r\n\r\ntype MyButtonType = {\r\n    onClick: () =>void\r\n    text :string\r\n    disabled?:boolean\r\n}\r\n\r\nexport function MyButton({onClick, text, disabled}: MyButtonType) {\r\n    return <div>\r\n        <button disabled={disabled} className=\"btn paper paper-raise-flatten\" onClick={onClick}>{text}</button>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport \"./checkbox.scss\"\r\n\r\ntype MyButtonType = {\r\n    text:string\r\n    checked:boolean\r\n    onClick: (check:boolean)=>void\r\n}\r\n\r\nexport function MyCheckbox({text, checked, onClick}: MyButtonType) {\r\n    return <div className=\"checkbox-flex\">\r\n        <input checked={checked} onChange={event => onClick(event.currentTarget.checked)} type=\"checkbox\" className=\"checkbox checkbox--blue\"/><span>{text}</span>\r\n    </div>\r\n}\r\n","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const Menu = () => {\r\n    return <ul style={{position:\"absolute\", left:\"250px\"}}>\r\n        <li><a>Menu</a>\r\n\r\n            <ul>\r\n                <li><NavLink exact to={\"/preJunior/\"}>preJunior</NavLink></li>\r\n                <li><NavLink exact to={\"/Junior/\"}>Junior</NavLink></li>\r\n                <li><NavLink exact to={\"/Junior+/\"}>Junior+</NavLink></li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n}","import React, {useState} from \"react\";\r\nimport {MyInput} from \"./MyInput\";\r\n\r\ntype EditableSpanType = {\r\n    onChange: (value:string)=>void\r\n    value:string\r\n}\r\n\r\nexport function EditableSpan({onChange, value}:EditableSpanType) {\r\n    let [editMode, setEditMode]= useState<boolean>(false)\r\n    \r\nreturn <div>\r\n    {editMode?<MyInput  onBlur={()=>{setEditMode(false)}} onChange={onChange} error={false} value={value} placeholder={\"Please set the value\"}/>:\r\n        <span onDoubleClick={()=>setEditMode(true)}>{value}</span>}\r\n\r\n</div>\r\n}","import React from \"react\";\r\n\r\ntype SelectProps = {\r\n    options: Array<string>\r\n    size: number\r\n    value:string\r\n    onChange:(value:string)=>void\r\n}\r\n\r\n\r\nexport function Select({options, size, value, onChange}: SelectProps) {\r\nconst onSelectChange = (value:string)=>onChange(value)\r\n    return <select style={{width:\"200px\",height:\"30px\", fontSize:\"16px\"}} placeholder={\"Choose\"} size={size} value={value} onChange={(event)=>onSelectChange(event.currentTarget.value)}>\r\n        <option value={value} hidden>{value}</option>\r\n        {options.map(opt => <option value={opt}>{opt}</option>)}\r\n    </select>\r\n\r\n}\r\n","import React from \"react\";\r\n\r\ntype RadioProps = {\r\n    radio: Array<string>\r\n    onChange:(newRadioValue:string)=>void\r\n    name:string\r\n}\r\n\r\nexport function Radio({radio,onChange, name}:RadioProps) {\r\n    const onRadioChange = (newRadioValue:string)=>onChange(newRadioValue)\r\n    return <div>\r\n        {radio.map(r=><p style={{display:\"flex\"}}>\r\n            <input onChange={(event)=>onRadioChange(event.currentTarget.value)}\r\n                   type=\"radio\" name={name}\r\n                   value={r}/>{r}</p>)\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n}\r\n","\r\nconst initState: Array<{ id: string, name: string, age: number }> = [\r\n    {id: \"1\", name: \"Bohdan\", age: 24},\r\n    {id: \"2\", name: \"Anton\", age: 25},\r\n    {id: \"3\", name: \"Dima\", age: 29},\r\n    {id: \"4\", name: \"Oleg\", age: 20},\r\n    {id: \"5\", name: \"Alex\", age: 17},\r\n    {id: \"6\", name: \"Peter\", age: 16}\r\n];\r\n\r\n\r\nexport const hwReducer = (state: Array<{ id: string, name: string, age: number }>, action: { type: string, payload: any }) => {\r\n    switch (action.type) {\r\n        case 'SORT':\r\n            switch (action.payload) {\r\n                case \"up\":\r\n                    const compareUp = (a: { id: string, name: string, age: number }, b: { id: string, name: string, age: number }) => {\r\n                        let comparison = 0;\r\n                        if (a.name > b.name) {\r\n                            comparison = 1;\r\n                        } else if (a.name < b.name) {\r\n                            comparison = -1;\r\n                        }\r\n                        return comparison;\r\n                    };\r\n                    return [...state.sort(compareUp)]\r\n                case 'down':\r\n                    const compareDown = (a: { id: string, name: string, age: number }, b: { id: string, name: string, age: number }) => {\r\n                        let comparison = 0;\r\n                        if (a.name < b.name) {\r\n                            comparison = 1;\r\n                        } else if (a.name > b.name) {\r\n                            comparison = -1;\r\n                        }\r\n                        return comparison;\r\n                    };\r\n                    return [...state.sort(compareDown)]\r\n            }\r\n        case 'CHECK':\r\n            return state.filter(person => person.age >= action.payload)\r\n        default:\r\n            return state\r\n    }\r\n};","import {useReducer} from \"react\";\r\nimport {hwReducer} from \"./homeWorkReducer\";\r\nimport React from \"react\";\r\nimport {MyButton} from \"./common/MyButton\";\r\n\r\n\r\nexport function ReducersTask() {\r\n    let [people, dispatchPeople] = useReducer(hwReducer, [\r\n            {id: \"1\", name: \"Bohdan\", age: 24},\r\n            {id: \"2\", name: \"Anton\", age: 25},\r\n            {id: \"3\", name: \"Dima\", age: 29},\r\n            {id: \"4\", name: \"Oleg\", age: 20},\r\n            {id: \"5\", name: \"Alex\", age: 17},\r\n            {id: \"6\", name: \"Peter\", age: 16},\r\n            {id: \"7\", name: \"Cesar\", age: 24},\r\n            {id: \"8\", name: \"Zlatan\", age: 18}\r\n        ]\r\n    )\r\n    return <div>{people.map(p => <div key={p.id}>Name: <b>{p.name}</b> Age: <b>{p.age}</b></div>)}\r\n        <div style={{display: \"flex\"}}>\r\n            <MyButton text={\"Sort A-Z\"} onClick={() => dispatchPeople({type: 'SORT', payload: 'up'})}/>\r\n            <MyButton text={\"Sort Z-A\"} onClick={() => dispatchPeople({type: 'SORT', payload: 'down'})}/>\r\n            <MyButton text={\"Check age\"} onClick={() => dispatchPeople({type: 'CHECK', payload: 18})}/>\r\n        </div>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport {MyButton} from \"./common/MyButton\";\r\nimport \"./App.css\"\r\n\r\nexport function DateTask() {\r\n    let [date, setDate] = useState(moment().format('h:mm:ss a'));\r\n    const [timerId, setTimerId] = useState();\r\n\r\n    const onClick = () => {\r\n        clearInterval(timerId);\r\n        const timer_id = setInterval(() => setDate(moment().format('h:mm:ss a')), 1000);\r\n        setTimerId(timer_id);\r\n    }\r\n\r\n    return <div>\r\n        <div className=\"date\" data-title={moment().format('MMMM Do YYYY')}>{date}</div>\r\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <MyButton text={\"Start\"} onClick={onClick}/>\r\n            <MyButton text={\"Stop\"} onClick={() => clearInterval(timerId)}/>\r\n        </div>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport \"./preloader.scss\"\r\nexport function Preloader() {\r\nreturn <div className='cssload-loader'>\r\n    <div className='cssload-inner cssload-one'></div>\r\n    <div className='cssload-inner cssload-two'></div>\r\n    <div className='cssload-inner cssload-three'></div>\r\n</div>\r\n\r\n}","import React from \"react\";\r\nimport \"./range.scss\"\r\ntype RangeType = {\r\n    onChange: (value: number) => void\r\n    text: string\r\n    minValue: number\r\n    maxValue: number\r\n    step: number\r\n    rangeValue: number\r\n}\r\n\r\nexport const Range = React.memo(function  ({onChange, text, maxValue, minValue, step, rangeValue}: RangeType) {\r\n    return <div>\r\n        <div className=\"container\">\r\n            <div className=\"range-slider\">\r\n                <span id=\"rs-bullet\" className=\"rs-label\">{rangeValue}</span>\r\n                <input onChange={(event)=>onChange(+event.currentTarget.value)} id=\"rs-range-line\" className=\"rs-range\" type=\"range\" value={rangeValue} min={minValue} max={maxValue}/>\r\n            </div>\r\n\r\n            <div className=\"box-minmax\">\r\n                <span>{minValue}</span><span>{maxValue}</span>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n})\r\n\r\n","\r\n\r\nlet initialState = {darkMode: false}\r\n\r\n\r\nexport const pageModeReducer = (state=initialState, action: changeSiteMode) => {\r\n    switch (action.type) {\r\n        case \"SET_MODE\":\r\n            return {...state, darkMode: action.darkMode}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype changeSiteMode = {type:\"SET_MODE\", darkMode:boolean}\r\n\r\nexport const changeSiteModeAC = (darkMode:boolean):changeSiteMode=>{\r\n    return {type:\"SET_MODE\", darkMode}\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {changeSiteModeAC} from \"./pageModeReducer\";\r\nimport {Menu} from \"./Menu\";\r\nimport {Radio} from \"./common/Radio\";\r\nimport React from \"react\";\r\n\r\nexport function JuniorPage() {\r\n    const dispatch = useDispatch()\r\n    let siteMode: Array<string> = [\"Dark Mode\", \"White Mode\"]\r\n    const onSiteModeChange = (newRadioValue: string) => {\r\n        if (newRadioValue === \"Dark Mode\") {\r\n            dispatch(changeSiteModeAC(true))\r\n        }\r\n        if (newRadioValue === \"White Mode\") {\r\n            dispatch(changeSiteModeAC(false))\r\n        }\r\n    }\r\n    return <>\r\n        <Menu/>\r\n        <h2>Task 12</h2>\r\n        <h4>Please select mode:</h4>\r\n        <Radio radio={siteMode} onChange={onSiteModeChange} name={\"Set Dark Mode\"}/>\r\n    </>\r\n\r\n}","import React, {useCallback, useState} from 'react';\nimport './App.css';\nimport {MessageList} from \"./Messenger\";\nimport {TaskList} from \"./TaskList\";\nimport {Input} from \"./Input\";\nimport {MyInput} from \"./common/MyInput\";\nimport {MyButton} from \"./common/MyButton\";\nimport {MyCheckbox} from \"./common/MyCheckbox\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport {Menu} from \"./Menu\";\nimport {EditableSpan} from \"./common/EditableSpan\";\nimport {Select} from \"./common/Select\";\nimport {Radio} from \"./common/Radio\";\nimport {ReducersTask} from \"./ReducersTask\";\nimport {DateTask} from \"./DateTask\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./state/store\";\nimport {Preloader} from \"./common/Preloader\";\nimport {Range} from \"./common/Range\";\nimport {JuniorPage} from \"./JuniorPage\";\n\nfunction App() {\n    let [value, setValue] = useState<string>(\"Editable span example\")\n    let [checked, setChecked] = useState<boolean>(true)\n    const setSpanValue = (value: string) => setValue(value)\n    const onChangeCheckbox = (checked: boolean) => setChecked(checked)\n    const onChange = (e: string) => setValue(e)\n    const onEnterPress = (e: string) => {\n        alert(e)\n        setValue(\"\")\n    }\n    const onClick = () => alert(\"done\")\n\n\n    function saveState<T>(key: string, state: T) {\n        const stateAsString = JSON.stringify(state);\n        localStorage.setItem(key, stateAsString)\n    }\n\n    function restoreState<T>(key: string, defaultState: T) {\n        const stateAsString = localStorage.getItem(key);\n        if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n        return defaultState;\n    }\n\n    const options = [\"1 year\", \"4 year\", \"12 year\", \"15 year\", \"16 year\", \"20 year\"]\n    let [selected, setSelected] = useState<string>(\"Select please...\")\n    const onChangeSelect = (selectedValue: string) => setSelected(selectedValue)\n    let radioState: Array<string> = [\"Trainee\", \"Junior\", \"Middle\", \"Senior\"]\n\n    let [radioValue, setRadioValue] = useState<string>(\" \")\n    const onRadioChange = (newRadioValue: string) => setRadioValue(newRadioValue)\n\n\n    let loading = useSelector<AppRootStateType, boolean>(state => state.juniorPage.loading)\n    let dispatch = useDispatch()\n    const setLoading = () => {\n        dispatch({type: \"SET_LOADING\", loading: true})\n        setTimeout(() => dispatch({type: \"SET_LOADING\", loading: false}), 3000)\n    }\n\n    let [rangeValue, setRangeValue] = useState<number>(0)\n    const onRangeChange = useCallback((value: number) => setRangeValue(value), [setRangeValue])\n\n\n    const darkMode = useSelector<AppRootStateType, boolean>(state => state.pageMode.darkMode)\n    return (\n        <HashRouter>\n            <div className={darkMode ? \"App dark-mode\" : \"App\"}>\n                <Switch>\n                    <Route path=\"/preJunior/\" render={() => (<>\n                        <Menu/>\n                        <h2>Task 1</h2>\n                        <MessageList/>\n                        <h2>Task 2</h2>\n                        <TaskList/>\n                        <h2>Task 3</h2>\n                        <Input/>\n                        <h2>Task 4</h2>\n                        <MyInput error={false} value={value} onChange={onChange} placeholder={\"Name\"}\n                                 onEnterPress={onEnterPress}/>\n                        <MyCheckbox onClick={onChangeCheckbox} checked={checked} text={\"Custom checkbox\"}/>\n                        <MyButton disabled={false} text={\"Send\"} onClick={onClick}/>\n                    </>)}/>\n                    {!loading ? <Route path=\"/Junior/\" render={() => (<>\n                            <Menu/>\n                            <h2>Task 6</h2>\n                            <EditableSpan onChange={setSpanValue} value={value}/>\n                            <div style={{display: \"flex\"}}>\n                                <MyButton onClick={() => saveState<string>(\"spanValue\", value)} text={\"Save state\"}/>\n                                <MyButton onClick={() => {\n                                    setValue(restoreState<string>(\"spanValue\", value))\n                                }} text={\"Restore state\"}/>\n                            </div>\n                            <h2>Task 7</h2>\n                            <div><Select options={options} size={1} value={selected} onChange={onChangeSelect}/></div>\n                            <Radio name={\"Health\"} radio={radioState} onChange={onRadioChange}/>\n                            Current radio value:<b>{radioValue}</b>\n                            <h2>Task 8</h2>\n                            <ReducersTask/>\n                            <h2>Task 9</h2>\n                            <DateTask/>\n                            <h2>Task 10</h2>\n                            <MyButton onClick={setLoading} text={\"Start loading...\"}/>\n                            <h2>Task 11</h2>\n                            <Range rangeValue={rangeValue} onChange={onRangeChange} text={\"Value\"} step={1} maxValue={50}\n                                   minValue={0}/>\n                        </>)}/> :\n                        <Preloader/>}\n                    <Route path=\"/Junior+/\" render={() => (<JuniorPage/>)}/>\n                </Switch>\n            </div>\n        </HashRouter>\n    );\n}\n\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {loading: false}\r\n\r\n\r\nexport const juniorPageReducer = (state=initialState, action: { type: string, loading: boolean }) => {\r\n    switch (action.type) {\r\n        case \"SET_LOADING\":\r\n            return {...state, loading: action.loading}\r\n        default:\r\n            return state\r\n    }\r\n};","import {juniorPageReducer} from \"../reduxTaskReducer\"\r\nimport {combineReducers, createStore} from 'redux';\r\nimport {pageModeReducer} from \"../pageModeReducer\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    juniorPage: juniorPageReducer,\r\n    pageMode: pageModeReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer);\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messenger\":\"Messenger_messenger__2G-hi\",\"new_message\":\"Messenger_new_message__2cveZ\",\"user_photo\":\"Messenger_user_photo__2BCpZ\",\"message_list\":\"Messenger_message_list__ITwqS\",\"message_item\":\"Messenger_message_item__2gIhB\",\"message_date\":\"Messenger_message_date__KjVdJ\",\"message_container\":\"Messenger_message_container__yzUmy\",\"send_button\":\"Messenger_send_button__3H2hx\",\"name\":\"Messenger_name__xl80l\"};"],"sourceRoot":""}