{"version":3,"sources":["common/input.module.css","Messenger.tsx","TaskList.tsx","Input.tsx","common/MyInput.tsx","common/MyButton.tsx","common/MyCheckbox.tsx","Menu.tsx","App.tsx","serviceWorker.ts","index.tsx","Messenger.module.css"],"names":["module","exports","MessageList","useState","title","date","photo","name","message","setMessage","newMessageTitle","setNewMessageTitle","today","Date","String","getDate","padStart","getMonth","getFullYear","addNewMassage","newMessage","newMessages","className","style","message_list","map","m","MassageItem","new_message","onChange","e","currentTarget","value","onKeyPress","charCode","type","placeholder","send_button","onClick","message_container","message_item","message_date","user_photo","src","TaskList","id","n","p","tasks","setTasks","deleteTask","filter","t","setFilteredTasks","filteredTasks","TaskItem","task","key","Input","initState","v1","names","setNames","trim","length","alert","MyInput","onEnterPress","error","group","color","bar","MyButton","text","disabled","MyCheckbox","checked","event","Menu","exact","to","App","setValue","setChecked","onChangeCheckbox","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.93498113.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"input_group__3QrRP\",\"bar\":\"input_bar__FZSmD\"};","import React, {useState} from \"react\";\r\nimport style from \"./Messenger.module.css\"\r\n\r\n\r\nexport function MessageList() {\r\n\r\n    let initState = [\r\n        {\r\n            title: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab aliquam architecto\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab aliquam architecto\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"consectetur cupiditate\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"Lorem ipsum dolor sit amet\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"Hello again\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        }\r\n    ]\r\n\r\n    type MessageType = { title: string, date: string, photo: string, name: string }\r\n    let [message, setMessage] = useState<Array<MessageType>>(initState)\r\n    let [newMessageTitle, setNewMessageTitle] = useState<string>(\"\")\r\n\r\n    let today = new Date();\r\n    let dd = String(today.getDate()).padStart(2, '0');\r\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    let yyyy = today.getFullYear();\r\n    let date = dd + '.' + mm + '.' + yyyy;\r\n\r\n    const addNewMassage = () => {\r\n        let newMessage = {\r\n            title: newMessageTitle,\r\n            date: date,\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        }\r\n        const newMessages = [...message, newMessage]\r\n        setMessage(newMessages)\r\n        setNewMessageTitle(\"\")\r\n    }\r\n\r\n    const onEnterPress = (e: any) => {\r\n        if (e.charCode === 13) {\r\n            addNewMassage()\r\n        }\r\n    }\r\n\r\n    return <div className={style.message_list}>\r\n        {message.map((m) => <MassageItem message={m}/>)}\r\n        <div className={style.new_message}>\r\n            <input onChange={e => setNewMessageTitle(e.currentTarget.value)} onKeyPress={onEnterPress} type=\"text\"\r\n                   value={newMessageTitle}\r\n                   placeholder=\"Enter your message\"/>\r\n\r\n            <button className={style.send_button} onClick={addNewMassage}>SEND</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype MessageItemPropsType = {\r\n    message: { title: string, date: string, photo: string, name: string }\r\n}\r\n\r\nfunction MassageItem({message}: MessageItemPropsType) {\r\n    return (<div className={style.message_container}>\r\n        <div className={style.message_item}>\r\n            <div className={style.name}>{message.name}</div>\r\n            <div className={style.title}>{message.title}</div>\r\n            <div className={style.message_date}>{message.date}</div>\r\n        </div>\r\n        <img className={style.user_photo} src={message.photo}/>\r\n    </div>)\r\n}","import React, {useState} from \"react\";\r\nimport style from \"./Messenger.module.css\"\r\n\r\ntype TaskType = { id: number, n: string, p: string }\r\n\r\nexport function TaskList() {\r\n\r\n    let allTasks = [\r\n        {id: 1, n: \"работа\", p: \"hight\"},\r\n        {id: 2, n: \"аниме\", p: \"low\"},\r\n        {id: 3, n: \"игры\", p: \"middle\"},\r\n        {id: 4, n: \"реакт\", p: \"hight\"},\r\n        {id: 5, n: \"хтмл\", p: \"low\"},\r\n        {id: 6, n: \"css\", p: \"low\"},\r\n        {id: 7, n: \"js\", p: \"hight\"},\r\n    ]\r\n    let [tasks, setTasks] = useState<Array<TaskType>>(allTasks)\r\n    const deleteTask = (id: number) => {\r\n        setTasks([...tasks.filter(t => t.id != id)])\r\n        setFilteredTasks([...filteredTasks.filter(t => t.id != id)])\r\n    }\r\n    const hightPriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"hight\"))\r\n    }\r\n    const middlePriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"middle\"))\r\n    }\r\n    const lowPriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"low\"))\r\n    }\r\n    const allTask = () => {\r\n        setFilteredTasks(tasks)\r\n    }\r\n    let [filteredTasks, setFilteredTasks] = useState<Array<TaskType>>(tasks)\r\n\r\n    return <div>\r\n        {filteredTasks?.map((t) => <TaskItem deleteTask={deleteTask} task={t}/>)}\r\n        <button onClick={() => hightPriorityTask()}>hight</button>\r\n        <button onClick={() => middlePriorityTask()}>middle</button>\r\n        <button onClick={() => lowPriorityTask()}>low</button>\r\n        <button onClick={() => allTask()}>all</button>\r\n    </div>\r\n}\r\n\r\ntype TaskItemProps = {\r\n    task: TaskType\r\n    deleteTask: (id: number) => void\r\n}\r\n\r\nfunction TaskItem({task, deleteTask}: TaskItemProps) {\r\n\r\n    return <div key={task.id}>{task.n} - {task.p}\r\n        <button onClick={() => deleteTask(task.id)}>X</button>\r\n    </div>\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {v1} from 'uuid';\r\n\r\ntype namesType = { id: string, name: string }\r\n\r\nexport function Input() {\r\n    let initState: Array<namesType> = [\r\n        {id: v1(), name: \"Bohdan\"},\r\n        {id: v1(), name: \"Roman\"},\r\n        {id: v1(), name: \"Victor\"}]\r\n    let [names, setNames] = useState<Array<namesType>>(initState)\r\n    let [newMessageTitle, setNewMessageTitle] = useState<string>(\"\")\r\n    const addNewMassage = () => {\r\n        if (newMessageTitle.trim().length != 0) {\r\n            setNames([...names, {id: v1(), name: newMessageTitle}])\r\n            alert(`Hello ${newMessageTitle}!!!`)\r\n            setNewMessageTitle(\"\")\r\n        }\r\n    }\r\n    const onEnterPress = (e: any) => {\r\n        if (e.charCode === 13) {\r\n            addNewMassage()\r\n        }\r\n    }\r\n    return <div className=\"group\">\r\n        <input onChange={e => setNewMessageTitle(e.currentTarget.value)} onKeyPress={onEnterPress} type=\"text\"\r\n               value={newMessageTitle}\r\n               placeholder=\"Enter your name\"/>\r\n        <button onClick={addNewMassage}>SEND</button>\r\n        {names.map(n => <div key={n.id}>{n.name}</div>)}\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport style from \"./input.module.css\"\r\n\r\ntype MyInputType = {\r\n    onChange: (e:string) =>void\r\n    onEnterPress:(e:string)=>void\r\n    error:boolean\r\n    value:string\r\n    placeholder:string\r\n}\r\n\r\nexport function MyInput({onChange,onEnterPress, value, error, placeholder}: MyInputType) {\r\n    const enterEvent = (e: any) => {\r\n        if (e.charCode === 13) {\r\n            onEnterPress((e.currentTarget.value))\r\n        }\r\n    }\r\n    return <div className={style.group}>\r\n        <input  style={error?{color:\"red\"}:{}} value={value} onKeyPress={enterEvent} placeholder={placeholder} type=\"text\" onChange={(e => onChange(e.currentTarget.value))}/>\r\n        <span className={style.bar}></span>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./button.scss\"\r\n\r\ntype MyButtonType = {\r\n    onClick: () =>void\r\n    text? :string\r\n    disabled?:boolean\r\n}\r\n\r\nexport function MyButton({onClick, text, disabled}: MyButtonType) {\r\n    return <div>\r\n        <button disabled={disabled} className=\"btn paper paper-raise-flatten\" onClick={onClick}>{text}</button>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport \"./checkbox.scss\"\r\n\r\ntype MyButtonType = {\r\n    text:string\r\n    checked:boolean\r\n    onClick: (check:boolean)=>void\r\n}\r\n\r\nexport function MyCheckbox({text, checked, onClick}: MyButtonType) {\r\n    return <div className=\"checkbox-flex\">\r\n        <input checked={checked} onChange={event => onClick(event.currentTarget.checked)} type=\"checkbox\" className=\"checkbox checkbox--blue\"/><span>{text}</span>\r\n    </div>\r\n}\r\n","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const Menu = () => {\r\n    return <ul>\r\n        <li><a>Menu</a>\r\n\r\n            <ul>\r\n                <li><NavLink exact to={\"/preJunior/\"}>preJunior</NavLink></li>\r\n                <li><NavLink exact to={\"/Junior/\"}>Junior</NavLink></li>\r\n                <li><NavLink exact to={\"/Junior+/\"}>Junior+</NavLink></li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {MessageList} from \"./Messenger\";\nimport {TaskList} from \"./TaskList\";\nimport {Input} from \"./Input\";\nimport {MyInput} from \"./common/MyInput\";\nimport {MyButton} from \"./common/MyButton\";\nimport {MyCheckbox} from \"./common/MyCheckbox\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport {Menu} from \"./Menu\";\n\nfunction App() {\n    let [value, setValue] = useState<string>(\"\")\n    let [checked, setChecked] = useState<boolean>(true)\n    const onChangeCheckbox = (checked: boolean) => setChecked(checked)\n    const onChange = (e: string) => setValue(e)\n    const onEnterPress = (e: string) => {\n        alert(e)\n        setValue(\"\")\n    }\n    const onClick = () => alert(\"done\")\n    return (\n        <HashRouter>\n            <Menu/>\n            <div className=\"App\">\n                <Switch>\n                    <Route path=\"/preJunior/\" render={() => (<>\n                        <h1>Task 1</h1>\n                        <MessageList/>\n                        <h1>Task 2</h1>\n                        <TaskList/>\n                        <h1>Task 3</h1>\n                        <Input/>\n                        <h1>Task 4</h1>\n                        <MyInput error={false} value={value} onChange={onChange} placeholder={\"Name\"}\n                                 onEnterPress={onEnterPress}/>\n                        <MyCheckbox onClick={onChangeCheckbox} checked={checked} text={\"Custom checkbox\"}/>\n                        <MyButton disabled={false} text={\"Send\"} onClick={onClick}/>\n                    </>)}/>\n                    <Route path=\"/Junior/\" render={() => (<h1>Will be soon...</h1>)}/>\n                    <Route path=\"/Junior+/\" render={() => (<h1>Will be soon...</h1>)}/>\n\n                </Switch>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messenger\":\"Messenger_messenger__2G-hi\",\"new_message\":\"Messenger_new_message__2cveZ\",\"user_photo\":\"Messenger_user_photo__2BCpZ\",\"message_list\":\"Messenger_message_list__ITwqS\",\"message_item\":\"Messenger_message_item__2gIhB\",\"message_date\":\"Messenger_message_date__KjVdJ\",\"message_container\":\"Messenger_message_container__yzUmy\",\"send_button\":\"Messenger_send_button__3H2hx\",\"name\":\"Messenger_name__xl80l\"};"],"sourceRoot":""}