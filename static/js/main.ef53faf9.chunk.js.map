{"version":3,"sources":["common/Input/input.module.css","common/Preloader/Preloader.tsx","tasks/task5/Menu.tsx","tasks/task13/homework-api.ts","common/Checkbox/Checkbox.tsx","common/Button/Button.tsx","tasks/task13/Request.tsx","tasks/task12/pageModeReducer.ts","common/Radio/Radio.tsx","tasks/task12/ColorModeTask.tsx","pages/JuniorPlusPage.tsx","common/Input/Input.tsx","tasks/task1/Messenger.tsx","tasks/task2/TaskList.tsx","tasks/task3/InputTask.tsx","tasks/task4/CustomComponents.tsx","pages/preJuniorPage.tsx","tasks/task8/homeWorkReducer.ts","tasks/task8/ReducersTask.tsx","tasks/task9/DateTask.tsx","common/Select/Select.tsx","tasks/task7/CustomComponents2.tsx","tasks/task6/EditableSpan.tsx","tasks/task6/LocalStorageEditableSpan.tsx","tasks/task10/SetLoadingTask.tsx","common/Range/Range.tsx","tasks/task11/RangeTask.tsx","pages/JuniorPage.tsx","App.tsx","serviceWorker.ts","tasks/task10/reduxTaskReducer.ts","state/store.ts","index.tsx","tasks/task1/Messenger.module.css"],"names":["module","exports","Preloader","className","Menu","style","position","left","exact","to","requestAPI","success","axios","post","Checkbox","text","checked","onClick","onChange","event","currentTarget","type","Button","disabled","Request","useState","setSuccess","response","setResponse","display","flexDirection","alignItems","value","then","res","data","info","catch","err","initialState","darkMode","changeSiteModeAC","Radio","radio","name","onRadioChange","newRadioValue","map","r","ColorModeTask","dispatch","useDispatch","JuniorPlusPage","Input","onEnterPress","error","placeholder","onBlur","group","autoFocus","color","onKeyPress","e","charCode","bar","MessageList","title","date","photo","message","setMessage","newMessageTitle","setNewMessageTitle","addNewMassage","newMessage","moment","format","message_list","m","MassageItem","new_message","message_container","message_item","message_date","user_photo","src","TaskList","id","n","p","tasks","setTasks","deleteTask","filter","t","setFilteredTasks","filteredTasks","TaskItem","task","key","InputTask","initState","v1","names","setNames","trim","length","alert","CustomComponents","setValue","setChecked","PreJuniorPage","hwReducer","state","action","payload","sort","a","b","comparison","person","age","ReducersTask","useReducer","people","dispatchPeople","DateTask","setDate","timerId","setTimerId","data-title","justifyContent","clearInterval","timer_id","setInterval","Select","options","size","onSelectChange","width","height","fontSize","hidden","opt","CustomComponents2","selected","setSelected","radioValue","setRadioValue","selectedValue","EditableSpan","editMode","setEditMode","onDoubleClick","LocalStorageEditableSpan","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","SetLoadingTask","loading","setTimeout","Range","React","memo","maxValue","minValue","rangeValue","step","min","max","RangeTask","setRangeValue","onRangeChange","useCallback","JuniorPage","App","useSelector","pageMode","juniorPage","path","render","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.ef53faf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"input_group__3Ycei\",\"bar\":\"input_bar__3kjGt\"};","import React from \"react\";\r\nimport \"./preloader.scss\"\r\nexport function Preloader() {\r\nreturn <div className='cssload-loader'>\r\n    <div className='cssload-inner cssload-one'></div>\r\n    <div className='cssload-inner cssload-two'></div>\r\n    <div className='cssload-inner cssload-three'></div>\r\n</div>\r\n\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const Menu = () => {\r\n    return <ul style={{position:\"absolute\", left:\"250px\"}}>\r\n        <li><a>Menu</a>\r\n            <ul>\r\n                <li><NavLink exact to={\"/preJunior/\"}>preJunior</NavLink></li>\r\n                <li><NavLink exact to={\"/Junior/\"}>Junior</NavLink></li>\r\n                <li><NavLink exact to={\"/Junior+/\"}>Junior+</NavLink></li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n}","import axios from 'axios'\r\n\r\nexport const requestAPI = {\r\n    postData(success:boolean) {\r\n        const promise = axios.post( 'https://neko-cafe-back.herokuapp.com/auth/test',{success: success});\r\n        return promise;\r\n    },\r\n}\r\n","import React from \"react\";\r\nimport \"./checkbox.scss\"\r\n\r\ntype MyButtonType = {\r\n    text: string\r\n    checked: boolean\r\n    onClick: (check: boolean) => void\r\n}\r\n\r\nexport function Checkbox({text, checked, onClick}: MyButtonType) {\r\n    return <div className=\"checkbox-flex\">\r\n        <input checked={checked} onChange={event => onClick(event.currentTarget.checked)} type=\"checkbox\"\r\n               className=\"checkbox checkbox--blue\"/><span>{text}</span>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport \"./button.scss\"\r\n\r\ntype MyButtonType = {\r\n    onClick: () =>void\r\n    text :string\r\n    disabled?:boolean\r\n}\r\n\r\nexport function Button({onClick, text, disabled}: MyButtonType) {\r\n    return <div>\r\n        <button disabled={disabled} className=\"btn paper paper-raise-flatten\" onClick={onClick}>{text}</button>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {requestAPI} from \"./homework-api\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\nimport {Button} from \"../../common/Button/Button\";\r\n\r\n\r\nexport function Request() {\r\n    let [success, setSuccess] = useState<boolean>(false)\r\n    let [response, setResponse] = useState(\"\")\r\n\r\n    const sendRequest = () => {\r\n        requestAPI.postData(success)\r\n            .then(res => setResponse(res.data.info))\r\n            .catch(err => setResponse(err.response.data.info))\r\n    }\r\n    return <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n        <Checkbox text={\"Payload true/false\"} checked={success} onClick={(value) => setSuccess(value)}/>\r\n        <Button onClick={sendRequest} text={\"Send Request\"}/>\r\n        <div><b>Response:</b></div>\r\n        <div>{response}</div>\r\n    </div>\r\n}\r\n\r\n","\r\n\r\nlet initialState = {darkMode: false}\r\n\r\n\r\nexport const pageModeReducer = (state=initialState, action: changeSiteMode) => {\r\n    switch (action.type) {\r\n        case \"SET_MODE\":\r\n            return {...state, darkMode: action.darkMode}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype changeSiteMode = {type:\"SET_MODE\", darkMode:boolean}\r\n\r\nexport const changeSiteModeAC = (darkMode:boolean):changeSiteMode=>{\r\n    return {type:\"SET_MODE\", darkMode}\r\n}","import React from \"react\";\r\n\r\ntype RadioProps = {\r\n    radio: Array<string>\r\n    onChange:(newRadioValue:string)=>void\r\n    name:string\r\n}\r\n\r\nexport function Radio({radio,onChange, name}:RadioProps) {\r\n    const onRadioChange = (newRadioValue:string)=>onChange(newRadioValue)\r\n    return <div>\r\n        {radio.map(r=><p style={{display:\"flex\"}}>\r\n            <input onChange={(event)=>onRadioChange(event.currentTarget.value)}\r\n                   type=\"radio\" name={name}\r\n                   value={r}/>{r}</p>)\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n}\r\n","import {useDispatch} from \"react-redux\";\r\nimport {changeSiteModeAC} from \"./pageModeReducer\";\r\nimport {Radio} from \"../../common/Radio/Radio\";\r\nimport React from \"react\";\r\n\r\nexport function ColorModeTask() {\r\n    const dispatch = useDispatch()\r\n    let siteMode: Array<string> = [\"Dark Mode\", \"White Mode\"]\r\n    const onSiteModeChange = (newRadioValue: string) => {\r\n        if (newRadioValue === \"Dark Mode\") {\r\n            dispatch(changeSiteModeAC(true))\r\n        }\r\n        if (newRadioValue === \"White Mode\") {\r\n            dispatch(changeSiteModeAC(false))\r\n        }\r\n    }\r\n    return <div>\r\n        <h4>Please select mode:</h4>\r\n        <Radio radio={siteMode} onChange={onSiteModeChange} name={\"Set Dark Mode\"}/>\r\n    </div>\r\n}","import {Menu} from \"../tasks/task5/Menu\";\r\nimport React from \"react\";\r\nimport {Request} from \"../tasks/task13/Request\";\r\nimport {ColorModeTask} from \"../tasks/task12/ColorModeTask\";\r\n\r\nexport function JuniorPlusPage() {\r\n\r\n    return <>\r\n        <Menu/>\r\n        <h2>Task 12</h2>\r\n        <ColorModeTask/>\r\n        <h2>Task 13</h2>\r\n        <Request/>\r\n    </>\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from \"./input.module.css\"\r\n\r\ntype MyInputType = {\r\n    onChange: (e:string) =>void\r\n    onEnterPress?:(e:string)=>void\r\n    error:boolean\r\n    value:string\r\n    placeholder:string\r\n    onBlur?: ()=>void\r\n}\r\n\r\nexport function Input({onChange,onEnterPress, value, error, placeholder, onBlur}: MyInputType) {\r\n    const enterEvent = (e: any) => {\r\n        if (e.charCode === 13&&onEnterPress) {\r\n            onEnterPress((e.currentTarget.value))\r\n        }\r\n    }\r\n    return <div className={style.group}>\r\n        <input autoFocus={true} onBlur={onBlur}  style={error?{color:\"red\"}:{}} value={value} onKeyPress={enterEvent} placeholder={placeholder} type=\"text\" onChange={(e => onChange(e.currentTarget.value))}/>\r\n        <span className={style.bar}></span>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport style from \"./Messenger.module.css\"\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport moment from \"moment\";\r\n\r\n\r\nexport function MessageList() {\r\n\r\n    let initState = [\r\n        {\r\n            title: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab aliquam architecto\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        },\r\n        {\r\n            title: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\",\r\n            date: \"12.06.2020\",\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        }\r\n    ]\r\n\r\n    type MessageType = { title: string, date: string, photo: string, name: string }\r\n    let [message, setMessage] = useState<Array<MessageType>>(initState)\r\n    let [newMessageTitle, setNewMessageTitle] = useState<string>(\"\")\r\n\r\n    const addNewMassage = () => {\r\n        let newMessage = {\r\n            title: newMessageTitle,\r\n            date: moment().format('h:mm:ss a'),\r\n            photo: \"https://randomuser.me/api/portraits/men/71.jpg\",\r\n            name: \"Artem\"\r\n        }\r\n        setMessage([...message, newMessage])\r\n        setNewMessageTitle(\"\")\r\n    }\r\n\r\n    return <div className={style.message_list}>\r\n        {message.map((m) => <MassageItem message={m}/>)}\r\n        <div className={style.new_message}>\r\n            <Input onChange={setNewMessageTitle} onEnterPress={addNewMassage} error={false}\r\n                   value={newMessageTitle}\r\n                   placeholder=\"Enter your message\"/>\r\n            <Button text={\"Send\"} disabled={false}  onClick={addNewMassage}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype MessageItemPropsType = {\r\n    message: { title: string, date: string, photo: string, name: string }\r\n}\r\n\r\nfunction MassageItem({message}: MessageItemPropsType) {\r\n    return (<div className={style.message_container}>\r\n        <div className={style.message_item}>\r\n            <div className={style.name}>{message.name}</div>\r\n            <div className={style.title}>{message.title}</div>\r\n            <div className={style.message_date}>{message.date}</div>\r\n        </div>\r\n        <img className={style.user_photo} src={message.photo}/>\r\n    </div>)\r\n}","import React, {useState} from \"react\";\r\nimport {Button} from \"../../common/Button/Button\";\r\n\r\ntype TaskType = { id: number, n: string, p: string }\r\n\r\nexport function TaskList() {\r\n\r\n    let allTasks = [\r\n        {id: 1, n: \"работа\", p: \"hight\"},\r\n        {id: 2, n: \"аниме\", p: \"low\"},\r\n        {id: 3, n: \"игры\", p: \"middle\"},\r\n        {id: 4, n: \"реакт\", p: \"hight\"},\r\n        {id: 5, n: \"хтмл\", p: \"low\"},\r\n        {id: 6, n: \"css\", p: \"low\"},\r\n        {id: 7, n: \"js\", p: \"hight\"},\r\n    ]\r\n    let [tasks, setTasks] = useState<Array<TaskType>>(allTasks)\r\n    const deleteTask = (id: number) => {\r\n        setTasks([...tasks.filter(t => t.id != id)])\r\n        setFilteredTasks([...filteredTasks.filter(t => t.id != id)])\r\n    }\r\n    const hightPriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"hight\"))\r\n    }\r\n    const middlePriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"middle\"))\r\n    }\r\n    const lowPriorityTask = () => {\r\n        setFilteredTasks(tasks.filter(t => t.p === \"low\"))\r\n    }\r\n    const allTask = () => {\r\n        setFilteredTasks(tasks)\r\n    }\r\n    let [filteredTasks, setFilteredTasks] = useState<Array<TaskType>>(tasks)\r\n\r\n    return <div>\r\n        {filteredTasks?.map((t) => <TaskItem deleteTask={deleteTask} task={t}/>)}\r\n        <div style={{display:\"flex\"}}>\r\n            <Button onClick={hightPriorityTask} text={\"hight\"}/>\r\n            <Button onClick={middlePriorityTask} text={\"middle\"}/>\r\n            <Button onClick={lowPriorityTask} text={\"low\"}/>\r\n            <Button onClick={allTask} text={\"all\"}/></div>\r\n\r\n    </div>\r\n}\r\n\r\ntype TaskItemProps = {\r\n    task: TaskType\r\n    deleteTask: (id: number) => void\r\n}\r\n\r\nfunction TaskItem({task, deleteTask}: TaskItemProps) {\r\n\r\n    return <div key={task.id}>{task.n} - {task.p}\r\n        <button onClick={() => deleteTask(task.id)}>X</button>\r\n    </div>\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {v1} from 'uuid';\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport {Input} from \"../../common/Input/Input\";\r\n\r\ntype namesType = { id: string, name: string }\r\n\r\nexport function InputTask() {\r\n    let initState: Array<namesType> = [\r\n        {id: v1(), name: \"Bohdan\"},\r\n        {id: v1(), name: \"Roman\"},\r\n        {id: v1(), name: \"Victor\"}]\r\n    let [names, setNames] = useState<Array<namesType>>(initState)\r\n    let [newMessageTitle, setNewMessageTitle] = useState<string>(\"\")\r\n    const addNewMassage = () => {\r\n        if (newMessageTitle.trim().length != 0) {\r\n            setNames([...names, {id: v1(), name: newMessageTitle}])\r\n            alert(`Hello ${newMessageTitle}!!!`)\r\n            setNewMessageTitle(\"\")\r\n        }\r\n    }\r\n    const onChange = (value: string) => setNewMessageTitle(value)\r\n    return <div className=\"group\">\r\n        <Input error={false} onChange={onChange} onEnterPress={addNewMassage}\r\n                   value={newMessageTitle}\r\n                   placeholder=\"Enter your name\"/>\r\n        <Button onClick={addNewMassage} text={\"SEND\"}/>\r\n        {names.map(n => <div key={n.id}>{n.name}</div>)}\r\n    </div>\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Input} from \"../../common/Input/Input\";\r\nimport {Checkbox} from \"../../common/Checkbox/Checkbox\";\r\nimport {Button} from \"../../common/Button/Button\";\r\n\r\nexport function CustomComponents() {\r\n    let [value, setValue] = useState<string>(\"pre-junior value example\")\r\n    let [checked, setChecked] = useState<boolean>(true)\r\n\r\n    const onChangeCheckbox = (checked: boolean) => setChecked(checked)\r\n    const onChange = (e: string) => setValue(e)\r\n    const onEnterPress = (e: string) => {\r\n        alert(e);\r\n        setValue(\"\")\r\n    }\r\n    const onClick = () => alert(\"done\")\r\n    return <div>\r\n        <Input error={false} value={value} onChange={onChange} placeholder={\"Name\"}\r\n               onEnterPress={onEnterPress}/>\r\n        <Checkbox onClick={onChangeCheckbox} checked={checked} text={\"Custom checkbox\"}/>\r\n        <Button disabled={false} text={\"Send\"} onClick={onClick}/>\r\n    </div>\r\n\r\n}","import React from \"react\";\r\nimport {Menu} from \"../tasks/task5/Menu\";\r\nimport {MessageList} from \"../tasks/task1/Messenger\";\r\nimport {TaskList} from \"../tasks/task2/TaskList\";\r\nimport {InputTask} from \"../tasks/task3/InputTask\";\r\nimport {CustomComponents} from \"../tasks/task4/CustomComponents\";\r\n\r\nexport function PreJuniorPage() {\r\n    return <div>\r\n        <Menu/>\r\n        <h2>Task 1</h2>\r\n        <MessageList/>\r\n        <h2>Task 2</h2>\r\n        <TaskList/>\r\n        <h2>Task 3</h2>\r\n        <InputTask/>\r\n        <h2>Task 4</h2>\r\n        <CustomComponents/>\r\n    </div>\r\n}\r\n\r\n","\r\nconst initState: Array<{ id: string, name: string, age: number }> = [\r\n    {id: \"1\", name: \"Bohdan\", age: 24},\r\n    {id: \"2\", name: \"Anton\", age: 25},\r\n    {id: \"3\", name: \"Dima\", age: 29},\r\n    {id: \"4\", name: \"Oleg\", age: 20},\r\n    {id: \"5\", name: \"Alex\", age: 17},\r\n    {id: \"6\", name: \"Peter\", age: 16}\r\n];\r\n\r\n\r\nexport const hwReducer = (state: Array<{ id: string, name: string, age: number }>, action: { type: string, payload: any }) => {\r\n    switch (action.type) {\r\n        case 'SORT':\r\n            switch (action.payload) {\r\n                case \"up\":\r\n                    const compareUp = (a: { id: string, name: string, age: number }, b: { id: string, name: string, age: number }) => {\r\n                        let comparison = 0;\r\n                        if (a.name > b.name) {\r\n                            comparison = 1;\r\n                        } else if (a.name < b.name) {\r\n                            comparison = -1;\r\n                        }\r\n                        return comparison;\r\n                    };\r\n                    return [...state.sort(compareUp)]\r\n                case 'down':\r\n                    const compareDown = (a: { id: string, name: string, age: number }, b: { id: string, name: string, age: number }) => {\r\n                        let comparison = 0;\r\n                        if (a.name < b.name) {\r\n                            comparison = 1;\r\n                        } else if (a.name > b.name) {\r\n                            comparison = -1;\r\n                        }\r\n                        return comparison;\r\n                    };\r\n                    return [...state.sort(compareDown)]\r\n            }\r\n        case 'CHECK':\r\n            return state.filter(person => person.age >= action.payload)\r\n        default:\r\n            return state\r\n    }\r\n};","import {useReducer} from \"react\";\r\nimport {hwReducer} from \"./homeWorkReducer\";\r\nimport React from \"react\";\r\nimport {Button} from \"../../common/Button/Button\";\r\n\r\n\r\nexport function ReducersTask() {\r\n    let [people, dispatchPeople] = useReducer(hwReducer, [\r\n            {id: \"1\", name: \"Bohdan\", age: 24},\r\n            {id: \"2\", name: \"Anton\", age: 25},\r\n            {id: \"3\", name: \"Dima\", age: 29},\r\n            {id: \"4\", name: \"Oleg\", age: 20},\r\n            {id: \"5\", name: \"Alex\", age: 17},\r\n            {id: \"6\", name: \"Peter\", age: 16},\r\n            {id: \"7\", name: \"Cesar\", age: 24},\r\n            {id: \"8\", name: \"Zlatan\", age: 18}\r\n        ]\r\n    )\r\n    return <div>{people.map(p => <div key={p.id}>Name: <b>{p.name}</b> Age: <b>{p.age}</b></div>)}\r\n        <div style={{display: \"flex\"}}>\r\n            <Button text={\"Sort A-Z\"} onClick={() => dispatchPeople({type: 'SORT', payload: 'up'})}/>\r\n            <Button text={\"Sort Z-A\"} onClick={() => dispatchPeople({type: 'SORT', payload: 'down'})}/>\r\n            <Button text={\"Check age\"} onClick={() => dispatchPeople({type: 'CHECK', payload: 18})}/>\r\n        </div>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport \"../../App.css\"\r\n\r\nexport function DateTask() {\r\n    let [date, setDate] = useState(moment().format('h:mm:ss a'));\r\n    const [timerId, setTimerId] = useState();\r\n\r\n    const onClick = () => {\r\n        clearInterval(timerId);\r\n        const timer_id = setInterval(() => setDate(moment().format('h:mm:ss a')), 1000);\r\n        setTimerId(timer_id);\r\n    }\r\n\r\n    return <div>\r\n        <div className=\"date\" data-title={moment().format('MMMM Do YYYY')}>{date}</div>\r\n        <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n            <Button text={\"Start\"} onClick={onClick}/>\r\n            <Button text={\"Stop\"} onClick={() => clearInterval(timerId)}/>\r\n        </div>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\n\r\ntype SelectProps = {\r\n    options: Array<string>\r\n    size: number\r\n    value:string\r\n    onChange:(value:string)=>void\r\n}\r\n\r\n\r\nexport function Select({options, size, value, onChange}: SelectProps) {\r\nconst onSelectChange = (value:string)=>onChange(value)\r\n    return <select style={{width:\"200px\",height:\"30px\", fontSize:\"16px\"}} placeholder={\"Choose\"} size={size} value={value} onChange={(event)=>onSelectChange(event.currentTarget.value)}>\r\n        <option value={value} hidden>{value}</option>\r\n        {options.map(opt => <option value={opt}>{opt}</option>)}\r\n    </select>\r\n\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {Select} from \"../../common/Select/Select\";\r\nimport {Radio} from \"../../common/Radio/Radio\";\r\n\r\nexport function CustomComponents2() {\r\n    const options = [\"1 year\", \"4 year\", \"12 year\", \"15 year\", \"16 year\", \"20 year\"]\r\n    let [selected, setSelected] = useState<string>(\"Select please...\")\r\n    const onChangeSelect = (selectedValue: string) => setSelected(selectedValue)\r\n    let radioState: Array<string> = [\"Trainee\", \"Junior\", \"Middle\", \"Senior\"]\r\n\r\n    let [radioValue, setRadioValue] = useState<string>(\" \")\r\n    const onRadioChange = (newRadioValue: string) => setRadioValue(newRadioValue)\r\n\r\n\r\n    return <div>\r\n        <div><Select options={options} size={1} value={selected} onChange={onChangeSelect}/></div>\r\n        <Radio name={\"Health\"} radio={radioState} onChange={onRadioChange}/>\r\n        Current radio value:<b>{radioValue}</b>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport {Input} from \"../../common/Input/Input\";\r\n\r\ntype EditableSpanType = {\r\n    onChange: (value:string)=>void\r\n    value:string\r\n}\r\n\r\nexport function EditableSpan({onChange, value}:EditableSpanType) {\r\n    let [editMode, setEditMode]= useState<boolean>(false)\r\n    \r\nreturn <div>\r\n    {editMode?<Input onBlur={()=>{setEditMode(false)}} onChange={onChange} error={false} value={value} placeholder={\"Please set the value\"}/>:\r\n        <span onDoubleClick={()=>setEditMode(true)}>{value}</span>}\r\n\r\n</div>\r\n}","import React, {useState} from \"react\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport {Button} from \"../../common/Button/Button\";\r\n\r\nexport function LocalStorageEditableSpan() {\r\n    let [value, setValue] = useState<string>(\"JuniorPage example value\")\r\n    const setSpanValue = (value: string) => setValue(value)\r\n\r\n    function saveState<T>(key: string, state: T) {\r\n        const stateAsString = JSON.stringify(state);\r\n        localStorage.setItem(key, stateAsString)\r\n    }\r\n\r\n    function restoreState<T>(key: string, defaultState: T) {\r\n        const stateAsString = localStorage.getItem(key);\r\n        if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n        return defaultState;\r\n    }\r\n\r\n    return <div>\r\n        <EditableSpan onChange={setSpanValue} value={value}/>\r\n        <div style={{display: \"flex\"}}>\r\n            <Button onClick={() => saveState<string>(\"spanValue\", value)} text={\"Save state\"}/>\r\n            <Button onClick={() => {\r\n                setValue(restoreState<string>(\"spanValue\", value))\r\n            }} text={\"Restore state\"}/>\r\n        </div>\r\n    </div>\r\n\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {Button} from \"../../common/Button/Button\";\r\nimport React from \"react\";\r\n\r\nexport function SetLoadingTask() {\r\n    let dispatch = useDispatch()\r\n    const setLoading = () => {\r\n        dispatch({type: \"SET_LOADING\", loading: true})\r\n        setTimeout(() => dispatch({type: \"SET_LOADING\", loading: false}), 3000)\r\n    }\r\n    return <Button onClick={setLoading} text={\"Start loading...\"}/>\r\n\r\n}","import React from \"react\";\r\nimport \"./range.scss\"\r\ntype RangeType = {\r\n    onChange: (value: number) => void\r\n    text: string\r\n    minValue: number\r\n    maxValue: number\r\n    step: number\r\n    rangeValue: number\r\n}\r\n\r\nexport const Range = React.memo(function  ({onChange, text, maxValue, minValue, step, rangeValue}: RangeType) {\r\n    return <div>\r\n        <div className=\"container\">\r\n            <div className=\"range-slider\">\r\n                <span id=\"rs-bullet\" className=\"rs-label\">{rangeValue}</span>\r\n                <input onChange={(event)=>onChange(+event.currentTarget.value)} id=\"rs-range-line\" className=\"rs-range\" type=\"range\" value={rangeValue} min={minValue} max={maxValue}/>\r\n            </div>\r\n\r\n            <div className=\"box-minmax\">\r\n                <span>{minValue}</span><span>{maxValue}</span>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n})\r\n\r\n","import React, {useCallback, useState} from \"react\";\r\nimport {Range} from \"../../common/Range/Range\";\r\n\r\nexport function RangeTask() {\r\n\r\n    let [rangeValue, setRangeValue] = useState<number>(0)\r\n    const onRangeChange = useCallback((value: number) => setRangeValue(value), [setRangeValue])\r\n\r\n    return <Range rangeValue={rangeValue} onChange={onRangeChange} text={\"Value\"} step={1} maxValue={50}\r\n                  minValue={0}/>\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport {Menu} from \"../tasks/task5/Menu\";\r\nimport {ReducersTask} from \"../tasks/task8/ReducersTask\";\r\nimport {DateTask} from \"../tasks/task9/DateTask\";\r\nimport {CustomComponents2} from \"../tasks/task7/CustomComponents2\";\r\nimport {LocalStorageEditableSpan} from \"../tasks/task6/LocalStorageEditableSpan\";\r\nimport {SetLoadingTask} from \"../tasks/task10/SetLoadingTask\";\r\nimport {RangeTask} from \"../tasks/task11/RangeTask\";\r\n\r\nexport function JuniorPage() {\r\n    return <div>\r\n        <Menu/>\r\n        <h2>Task 6</h2>\r\n        <LocalStorageEditableSpan/>\r\n        <h2>Task 7</h2>\r\n        <CustomComponents2/>\r\n        <h2>Task 8</h2>\r\n        <ReducersTask/>\r\n        <h2>Task 9</h2>\r\n        <DateTask/>\r\n        <h2>Task 10</h2>\r\n        <SetLoadingTask/>\r\n        <h2>Task 11</h2>\r\n        <RangeTask/>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./state/store\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport {JuniorPlusPage} from \"./pages/JuniorPlusPage\";\r\nimport {PreJuniorPage} from \"./pages/preJuniorPage\";\r\nimport {JuniorPage} from \"./pages/JuniorPage\";\r\n\r\nfunction App() {\r\n\r\n    const darkMode = useSelector<AppRootStateType, boolean>(state => state.pageMode.darkMode)\r\n    let loading = useSelector<AppRootStateType, boolean>(state => state.juniorPage.loading)\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div className={darkMode ? \"App dark-mode\" : \"App\"}>\r\n                <Switch>\r\n                    <Route exact path={\"/\"} render={() => (<PreJuniorPage/>)}/>\r\n                    <Route path=\"/preJunior/\" render={() => (<PreJuniorPage/>)}/>\r\n                    {!loading ? <Route path=\"/Junior/\" render={() => (<JuniorPage/>)}/> : <Preloader/>}\r\n                    <Route path=\"/Junior+/\" render={() => (<JuniorPlusPage/>)}/>\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {loading: false}\r\n\r\n\r\nexport const juniorPageReducer = (state=initialState, action: { type: string, loading: boolean }) => {\r\n    switch (action.type) {\r\n        case \"SET_LOADING\":\r\n            return {...state, loading: action.loading}\r\n        default:\r\n            return state\r\n    }\r\n};","import {juniorPageReducer} from \"../tasks/task10/reduxTaskReducer\"\r\nimport {combineReducers, createStore} from 'redux';\r\nimport {pageModeReducer} from \"../tasks/task12/pageModeReducer\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    juniorPage: juniorPageReducer,\r\n    pageMode: pageModeReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer);\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messenger\":\"Messenger_messenger__1LrW_\",\"new_message\":\"Messenger_new_message__3pIlh\",\"user_photo\":\"Messenger_user_photo___YfR2\",\"message_list\":\"Messenger_message_list__yTssk\",\"message_item\":\"Messenger_message_item__dWgXx\",\"message_date\":\"Messenger_message_date__1dnvq\",\"message_container\":\"Messenger_message_container__3HaKN\",\"name\":\"Messenger_name__1lBzP\"};"],"sourceRoot":""}